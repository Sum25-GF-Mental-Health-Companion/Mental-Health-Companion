name: Go & Flutter CI/CD

on:
  push:
    branches: [ "main", "server-and-app", "server-and-app-2" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      PROXY_API_KEY: ${{ secrets.PROXY_API_KEY }}
      PROXY_API_URL: ${{ secrets.PROXY_API_URL }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
    defaults:
      run:
        working-directory: backend/mental-health-api

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Install dependencies
      run: go mod download

    - name: Lint go vet
      run: go vet ./...

    - name: Lint gofmt check
      run: |
        if [ -n "$(gofmt -l .)" ]; then
          echo "The following files are not formatted properly:"
          gofmt -l .
          exit 1
        fi

    - name: Build
      run: go build -v ./...

    - name: Run tests
      run: go test -v ./...

  flutter-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: application
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.1'

      - name: Install dependencies
        run: flutter pub get

      - name: Run Flutter tests
        run: flutter test

  deploy-flutter:
    runs-on: ubuntu-latest
    needs: [build-and-test, flutter-test]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/server-and-app-2'

    defaults:
      run:
        working-directory: application

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.1'

      - name: Enable web support
        run: flutter config --enable-web

      - name: Install dependencies
        run: flutter pub get

      - name: Build Flutter web
        run: flutter build web --release

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: application/build/web
